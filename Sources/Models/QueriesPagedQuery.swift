//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct QueriesPagedQuery: APIModel {

    public var currentPage: Int?

    public var itemsPerPage: Int?

    public var requestContinuationToken: String?

    public init(currentPage: Int? = nil, itemsPerPage: Int? = nil, requestContinuationToken: String? = nil) {
        self.currentPage = currentPage
        self.itemsPerPage = itemsPerPage
        self.requestContinuationToken = requestContinuationToken
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        currentPage = try container.decodeIfPresent("currentPage")
        itemsPerPage = try container.decodeIfPresent("itemsPerPage")
        requestContinuationToken = try container.decodeIfPresent("requestContinuationToken")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(currentPage, forKey: "currentPage")
        try container.encodeIfPresent(itemsPerPage, forKey: "itemsPerPage")
        try container.encodeIfPresent(requestContinuationToken, forKey: "requestContinuationToken")
    }

    public static func == (lhs: QueriesPagedQuery, rhs: QueriesPagedQuery) -> Bool {
        guard lhs.currentPage == rhs.currentPage else { return false }
        guard lhs.itemsPerPage == rhs.itemsPerPage else { return false }
        guard lhs.requestContinuationToken == rhs.requestContinuationToken else { return false }
        return true
    }
}
