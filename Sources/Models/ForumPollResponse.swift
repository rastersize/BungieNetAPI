//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct ForumPollResponse: APIModel {

    public var results: [ForumPollResult]?

    public var topicId: Int?

    public var totalVotes: Int?

    public init(results: [ForumPollResult]? = nil, topicId: Int? = nil, totalVotes: Int? = nil) {
        self.results = results
        self.topicId = topicId
        self.totalVotes = totalVotes
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        results = try container.decodeArrayIfPresent("results")
        topicId = try container.decodeIfPresent("topicId")
        totalVotes = try container.decodeIfPresent("totalVotes")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(results, forKey: "results")
        try container.encodeIfPresent(topicId, forKey: "topicId")
        try container.encodeIfPresent(totalVotes, forKey: "totalVotes")
    }

    public static func == (lhs: ForumPollResponse, rhs: ForumPollResponse) -> Bool {
        guard lhs.results == rhs.results else { return false }
        guard lhs.topicId == rhs.topicId else { return false }
        guard lhs.totalVotes == rhs.totalVotes else { return false }
        return true
    }
}
