//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The localized properties of the requirementsDisplay, allowing information about the requirement or item being featured to be seen. */
public struct DestinyDefinitionsDestinyVendorRequirementDisplayEntryDefinition: APIModel {

    public var icon: String?

    public var name: String?

    public var source: String?

    public var type: String?

    public init(icon: String? = nil, name: String? = nil, source: String? = nil, type: String? = nil) {
        self.icon = icon
        self.name = name
        self.source = source
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        icon = try container.decodeIfPresent("icon")
        name = try container.decodeIfPresent("name")
        source = try container.decodeIfPresent("source")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(icon, forKey: "icon")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(source, forKey: "source")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public static func == (lhs: DestinyDefinitionsDestinyVendorRequirementDisplayEntryDefinition, rhs: DestinyDefinitionsDestinyVendorRequirementDisplayEntryDefinition) -> Bool {
        guard lhs.icon == rhs.icon else { return false }
        guard lhs.name == rhs.name else { return false }
        guard lhs.source == rhs.source else { return false }
        guard lhs.type == rhs.type else { return false }
        return true
    }
}
