//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A specific reason for being banned. Only accessible under the related category (DestinyReportReasonCategoryDefinition) under which it is shown. Note that this means that report reasons' reasonHash are not globally unique: and indeed, entries like "Other" are defined under most categories for example. */
public struct DestinyDefinitionsReportingDestinyReportReasonDefinition: APIModel {

    public var displayProperties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition?

    /** The identifier for the reason: they are only guaranteed unique under the Category in which they are found. */
    public var reasonHash: Int?

    public init(displayProperties: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition? = nil, reasonHash: Int? = nil) {
        self.displayProperties = displayProperties
        self.reasonHash = reasonHash
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        displayProperties = try container.decodeIfPresent("displayProperties")
        reasonHash = try container.decodeIfPresent("reasonHash")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(displayProperties, forKey: "displayProperties")
        try container.encodeIfPresent(reasonHash, forKey: "reasonHash")
    }

    public static func == (lhs: DestinyDefinitionsReportingDestinyReportReasonDefinition, rhs: DestinyDefinitionsReportingDestinyReportReasonDefinition) -> Bool {
        guard lhs.displayProperties == rhs.displayProperties else { return false }
        guard lhs.reasonHash == rhs.reasonHash else { return false }
        return true
    }
}
