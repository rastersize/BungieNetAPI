//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Information about the category and items currently sold in that category. */
public struct DestinyEntitiesVendorsDestinyVendorCategory: APIModel {

    /** An index into the DestinyVendorDefinition.displayCategories property, so you can grab the display data for this category. */
    public var displayCategoryIndex: Int?

    /** An ordered list of indexes into items being sold in this category (DestinyVendorDefinition.itemList) which will contain more information about the items being sold themselves. Can also be used to index into DestinyVendorSaleItemComponent data, if you asked for that data to be returned. */
    public var itemIndexes: [Int]?

    public init(displayCategoryIndex: Int? = nil, itemIndexes: [Int]? = nil) {
        self.displayCategoryIndex = displayCategoryIndex
        self.itemIndexes = itemIndexes
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        displayCategoryIndex = try container.decodeIfPresent("displayCategoryIndex")
        itemIndexes = try container.decodeArrayIfPresent("itemIndexes")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(displayCategoryIndex, forKey: "displayCategoryIndex")
        try container.encodeIfPresent(itemIndexes, forKey: "itemIndexes")
    }

    public static func == (lhs: DestinyEntitiesVendorsDestinyVendorCategory, rhs: DestinyEntitiesVendorsDestinyVendorCategory) -> Bool {
        guard lhs.displayCategoryIndex == rhs.displayCategoryIndex else { return false }
        guard lhs.itemIndexes == rhs.itemIndexes else { return false }
        return true
    }
}
