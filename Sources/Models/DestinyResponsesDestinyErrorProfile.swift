//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** If a Destiny Profile can't be returned, but we're pretty certain it's a valid Destiny account, this will contain as much info as we can get about the profile for your use.
Assume that the most you'll get is the Error Code, the Membership Type and the Membership ID. */
public struct DestinyResponsesDestinyErrorProfile: APIModel {

    /** The error that we encountered. You should be able to look up localized text to show to the user for these failures. */
    public var errorCode: Int?

    /** Basic info about the account that failed. Don't expect anything other than membership ID, Membership Type, and displayName to be populated. */
    public var infoCard: [String: Any]?

    public init(errorCode: Int? = nil, infoCard: [String: Any]? = nil) {
        self.errorCode = errorCode
        self.infoCard = infoCard
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        errorCode = try container.decodeIfPresent("errorCode")
        infoCard = try container.decodeAnyIfPresent("infoCard")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(errorCode, forKey: "errorCode")
        try container.encodeAnyIfPresent(infoCard, forKey: "infoCard")
    }

    public static func == (lhs: DestinyResponsesDestinyErrorProfile, rhs: DestinyResponsesDestinyErrorProfile) -> Bool {
        guard lhs.errorCode == rhs.errorCode else { return false }
        guard NSDictionary(dictionary: lhs.infoCard ?? [:]).isEqual(to: rhs.infoCard ?? [:]) else { return false }
        return true
    }
}
