//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct DestinyResponsesDestinyItemChangeResponse: APIModel {

    /** Items that appeared in the inventory possibly as a result of an action. */
    public var addedInventoryItems: [DestinyEntitiesItemsDestinyItemComponent]?

    public var item: DestinyResponsesDestinyItemResponse?

    /** Items that disappeared from the inventory possibly as a result of an action. */
    public var removedInventoryItems: [DestinyEntitiesItemsDestinyItemComponent]?

    public init(addedInventoryItems: [DestinyEntitiesItemsDestinyItemComponent]? = nil, item: DestinyResponsesDestinyItemResponse? = nil, removedInventoryItems: [DestinyEntitiesItemsDestinyItemComponent]? = nil) {
        self.addedInventoryItems = addedInventoryItems
        self.item = item
        self.removedInventoryItems = removedInventoryItems
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        addedInventoryItems = try container.decodeArrayIfPresent("addedInventoryItems")
        item = try container.decodeIfPresent("item")
        removedInventoryItems = try container.decodeArrayIfPresent("removedInventoryItems")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(addedInventoryItems, forKey: "addedInventoryItems")
        try container.encodeIfPresent(item, forKey: "item")
        try container.encodeIfPresent(removedInventoryItems, forKey: "removedInventoryItems")
    }

    public static func == (lhs: DestinyResponsesDestinyItemChangeResponse, rhs: DestinyResponsesDestinyItemChangeResponse) -> Bool {
        guard lhs.addedInventoryItems == rhs.addedInventoryItems else { return false }
        guard lhs.item == rhs.item else { return false }
        guard lhs.removedInventoryItems == rhs.removedInventoryItems else { return false }
        return true
    }
}
