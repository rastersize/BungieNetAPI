//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** This is an experimental set of data that Bungie considers to be "transitory" - information that may be useful for API users, but that is coming from a non-authoritative data source about information that could potentially change at a more frequent pace than Bungie.net will receive updates about it.
This information is provided exclusively for convenience should any of it be useful to users: we provide no guarantees to the accuracy or timeliness of data that comes from this source. Know that this data can potentially be out-of-date or even wrong entirely if the user disconnected from the game or suddenly changed their status before we can receive refreshed data. */
public struct DestinyComponentsProfilesDestinyProfileTransitoryComponent: APIModel {

    /** If you are in an activity, this is some transitory info about the activity currently being played. */
    public var currentActivity: [String: Any]?

    /** Information about whether and what might prevent you from joining this person on a fireteam. */
    public var joinability: [String: Any]?

    /** The hash identifier for the DestinyDestinationDefinition of the last location you were orbiting when in orbit. */
    public var lastOrbitedDestinationHash: Int?

    /** If you have any members currently in your party, this is some (very) bare-bones information about those members. */
    public var partyMembers: [DestinyComponentsProfilesDestinyProfileTransitoryPartyMember]?

    /** Information about tracked entities. */
    public var tracking: [DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry]?

    public init(currentActivity: [String: Any]? = nil, joinability: [String: Any]? = nil, lastOrbitedDestinationHash: Int? = nil, partyMembers: [DestinyComponentsProfilesDestinyProfileTransitoryPartyMember]? = nil, tracking: [DestinyComponentsProfilesDestinyProfileTransitoryTrackingEntry]? = nil) {
        self.currentActivity = currentActivity
        self.joinability = joinability
        self.lastOrbitedDestinationHash = lastOrbitedDestinationHash
        self.partyMembers = partyMembers
        self.tracking = tracking
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        currentActivity = try container.decodeAnyIfPresent("currentActivity")
        joinability = try container.decodeAnyIfPresent("joinability")
        lastOrbitedDestinationHash = try container.decodeIfPresent("lastOrbitedDestinationHash")
        partyMembers = try container.decodeArrayIfPresent("partyMembers")
        tracking = try container.decodeArrayIfPresent("tracking")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeAnyIfPresent(currentActivity, forKey: "currentActivity")
        try container.encodeAnyIfPresent(joinability, forKey: "joinability")
        try container.encodeIfPresent(lastOrbitedDestinationHash, forKey: "lastOrbitedDestinationHash")
        try container.encodeIfPresent(partyMembers, forKey: "partyMembers")
        try container.encodeIfPresent(tracking, forKey: "tracking")
    }

    public static func == (lhs: DestinyComponentsProfilesDestinyProfileTransitoryComponent, rhs: DestinyComponentsProfilesDestinyProfileTransitoryComponent) -> Bool {
        guard NSDictionary(dictionary: lhs.currentActivity ?? [:]).isEqual(to: rhs.currentActivity ?? [:]) else { return false }
        guard NSDictionary(dictionary: lhs.joinability ?? [:]).isEqual(to: rhs.joinability ?? [:]) else { return false }
        guard lhs.lastOrbitedDestinationHash == rhs.lastOrbitedDestinationHash else { return false }
        guard lhs.partyMembers == rhs.partyMembers else { return false }
        guard lhs.tracking == rhs.tracking else { return false }
        return true
    }
}
