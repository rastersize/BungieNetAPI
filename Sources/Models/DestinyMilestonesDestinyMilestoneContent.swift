//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Represents localized, extended content related to Milestones. This is intentionally returned by a separate endpoint and not with Character-level Milestone data because we do not put localized data into standard Destiny responses, both for brevity of response and for caching purposes. If you really need this data, hit the Milestone Content endpoint. */
public struct DestinyMilestonesDestinyMilestoneContent: APIModel {

    /** The "About this Milestone" text from the Firehose. */
    public var about: String?

    /** If DPS has defined items related to this Milestone, they can categorize those items in the Firehose. That data will then be returned as item categories here. */
    public var itemCategories: [DestinyMilestonesDestinyMilestoneContentItemCategory]?

    /** The Current Status of the Milestone, as driven by the Firehose. */
    public var status: String?

    /** A list of tips, provided by the Firehose. */
    public var tips: [String]?

    public init(about: String? = nil, itemCategories: [DestinyMilestonesDestinyMilestoneContentItemCategory]? = nil, status: String? = nil, tips: [String]? = nil) {
        self.about = about
        self.itemCategories = itemCategories
        self.status = status
        self.tips = tips
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        about = try container.decodeIfPresent("about")
        itemCategories = try container.decodeArrayIfPresent("itemCategories")
        status = try container.decodeIfPresent("status")
        tips = try container.decodeArrayIfPresent("tips")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(about, forKey: "about")
        try container.encodeIfPresent(itemCategories, forKey: "itemCategories")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(tips, forKey: "tips")
    }

    public static func == (lhs: DestinyMilestonesDestinyMilestoneContent, rhs: DestinyMilestonesDestinyMilestoneContent) -> Bool {
        guard lhs.about == rhs.about else { return false }
        guard lhs.itemCategories == rhs.itemCategories else { return false }
        guard lhs.status == rhs.status else { return false }
        guard lhs.tips == rhs.tips else { return false }
        return true
    }
}
