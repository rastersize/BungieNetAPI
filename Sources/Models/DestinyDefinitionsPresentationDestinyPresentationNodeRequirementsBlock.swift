//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Presentation nodes can be restricted by various requirements. This defines the rules of those requirements, and the message(s) to be shown if these requirements aren't met. */
public struct DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock: APIModel {

    /** If this node is not accessible due to Entitlements (for instance, you don't own the required game expansion), this is the message to show. */
    public var entitlementUnavailableMessage: String?

    public init(entitlementUnavailableMessage: String? = nil) {
        self.entitlementUnavailableMessage = entitlementUnavailableMessage
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        entitlementUnavailableMessage = try container.decodeIfPresent("entitlementUnavailableMessage")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(entitlementUnavailableMessage, forKey: "entitlementUnavailableMessage")
    }

    public static func == (lhs: DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock, rhs: DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock) -> Bool {
        guard lhs.entitlementUnavailableMessage == rhs.entitlementUnavailableMessage else { return false }
        return true
    }
}
