//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The definition of an item and quantity required in a character's inventory in order to perform an action. */
public struct DestinyDefinitionsDestinyItemActionRequiredItemDefinition: APIModel {

    /** The minimum quantity of the item you have to have. */
    public var count: Int?

    /** If true, the item/quantity will be deleted from your inventory when the action is performed. Otherwise, you'll retain these required items after the action is complete. */
    public var deleteOnAction: Bool?

    /** The hash identifier of the item you need to have. Use it to look up the DestinyInventoryItemDefinition for more info. */
    public var itemHash: Int?

    public init(count: Int? = nil, deleteOnAction: Bool? = nil, itemHash: Int? = nil) {
        self.count = count
        self.deleteOnAction = deleteOnAction
        self.itemHash = itemHash
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        count = try container.decodeIfPresent("count")
        deleteOnAction = try container.decodeIfPresent("deleteOnAction")
        itemHash = try container.decodeIfPresent("itemHash")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(count, forKey: "count")
        try container.encodeIfPresent(deleteOnAction, forKey: "deleteOnAction")
        try container.encodeIfPresent(itemHash, forKey: "itemHash")
    }

    public static func == (lhs: DestinyDefinitionsDestinyItemActionRequiredItemDefinition, rhs: DestinyDefinitionsDestinyItemActionRequiredItemDefinition) -> Bool {
        guard lhs.count == rhs.count else { return false }
        guard lhs.deleteOnAction == rhs.deleteOnAction else { return false }
        guard lhs.itemHash == rhs.itemHash else { return false }
        return true
    }
}
