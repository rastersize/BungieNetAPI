//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Defines a particular entry in an ItemSet (AKA a particular Quest Step in a Quest) */
public struct DestinyDefinitionsDestinyItemSetBlockEntryDefinition: APIModel {

    /** This is the hash identifier for a DestinyInventoryItemDefinition representing this quest step. */
    public var itemHash: Int?

    /** Used for tracking which step a user reached. These values will be populated in the user's internal state, which we expose externally as a more usable DestinyQuestStatus object. If this item has been obtained, this value will be set in trackingUnlockValueHash. */
    public var trackingValue: Int?

    public init(itemHash: Int? = nil, trackingValue: Int? = nil) {
        self.itemHash = itemHash
        self.trackingValue = trackingValue
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        itemHash = try container.decodeIfPresent("itemHash")
        trackingValue = try container.decodeIfPresent("trackingValue")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(itemHash, forKey: "itemHash")
        try container.encodeIfPresent(trackingValue, forKey: "trackingValue")
    }

    public static func == (lhs: DestinyDefinitionsDestinyItemSetBlockEntryDefinition, rhs: DestinyDefinitionsDestinyItemSetBlockEntryDefinition) -> Bool {
        guard lhs.itemHash == rhs.itemHash else { return false }
        guard lhs.trackingValue == rhs.trackingValue else { return false }
        return true
    }
}
