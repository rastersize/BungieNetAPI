//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there's less guitars on fire. Yet. #spoileralert?
This will include information such as Checklist info. */
public struct DestinyComponentsProfilesDestinyProfileProgressionComponent: APIModel {

    /** The set of checklists that can be examined on a profile-wide basis, keyed by the hash identifier of the Checklist (DestinyChecklistDefinition)
For each checklist returned, its value is itself a Dictionary keyed by the checklist's hash identifier with the value being a boolean indicating if it's been discovered yet. */
    public var checklists: [String: [String: Bool]]?

    /** Data related to your progress on the current season's artifact that is the same across characters. */
    public var seasonalArtifact: [String: Any]?

    public init(checklists: [String: [String: Bool]]? = nil, seasonalArtifact: [String: Any]? = nil) {
        self.checklists = checklists
        self.seasonalArtifact = seasonalArtifact
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        checklists = try container.decodeIfPresent("checklists")
        seasonalArtifact = try container.decodeAnyIfPresent("seasonalArtifact")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(checklists, forKey: "checklists")
        try container.encodeAnyIfPresent(seasonalArtifact, forKey: "seasonalArtifact")
    }

    public static func == (lhs: DestinyComponentsProfilesDestinyProfileProgressionComponent, rhs: DestinyComponentsProfilesDestinyProfileProgressionComponent) -> Bool {
        guard lhs.checklists == rhs.checklists else { return false }
        guard NSDictionary(dictionary: lhs.seasonalArtifact ?? [:]).isEqual(to: rhs.seasonalArtifact ?? [:]) else { return false }
        return true
    }
}
