//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct GroupsV2GroupOptionalConversation: APIModel {

    public var chatEnabled: Bool?

    public var chatName: String?

    public var chatSecurity: Int?

    public var conversationId: Int?

    public var groupId: Int?

    public init(chatEnabled: Bool? = nil, chatName: String? = nil, chatSecurity: Int? = nil, conversationId: Int? = nil, groupId: Int? = nil) {
        self.chatEnabled = chatEnabled
        self.chatName = chatName
        self.chatSecurity = chatSecurity
        self.conversationId = conversationId
        self.groupId = groupId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        chatEnabled = try container.decodeIfPresent("chatEnabled")
        chatName = try container.decodeIfPresent("chatName")
        chatSecurity = try container.decodeIfPresent("chatSecurity")
        conversationId = try container.decodeIfPresent("conversationId")
        groupId = try container.decodeIfPresent("groupId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(chatEnabled, forKey: "chatEnabled")
        try container.encodeIfPresent(chatName, forKey: "chatName")
        try container.encodeIfPresent(chatSecurity, forKey: "chatSecurity")
        try container.encodeIfPresent(conversationId, forKey: "conversationId")
        try container.encodeIfPresent(groupId, forKey: "groupId")
    }

    public static func == (lhs: GroupsV2GroupOptionalConversation, rhs: GroupsV2GroupOptionalConversation) -> Bool {
        guard lhs.chatEnabled == rhs.chatEnabled else { return false }
        guard lhs.chatName == rhs.chatName else { return false }
        guard lhs.chatSecurity == rhs.chatSecurity else { return false }
        guard lhs.conversationId == rhs.conversationId else { return false }
        guard lhs.groupId == rhs.groupId else { return false }
        return true
    }
}
