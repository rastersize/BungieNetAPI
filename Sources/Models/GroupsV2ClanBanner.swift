//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct GroupsV2ClanBanner: APIModel {

    public var decalBackgroundColorId: Int?

    public var decalColorId: Int?

    public var decalId: Int?

    public var gonfalonColorId: Int?

    public var gonfalonDetailColorId: Int?

    public var gonfalonDetailId: Int?

    public var gonfalonId: Int?

    public init(decalBackgroundColorId: Int? = nil, decalColorId: Int? = nil, decalId: Int? = nil, gonfalonColorId: Int? = nil, gonfalonDetailColorId: Int? = nil, gonfalonDetailId: Int? = nil, gonfalonId: Int? = nil) {
        self.decalBackgroundColorId = decalBackgroundColorId
        self.decalColorId = decalColorId
        self.decalId = decalId
        self.gonfalonColorId = gonfalonColorId
        self.gonfalonDetailColorId = gonfalonDetailColorId
        self.gonfalonDetailId = gonfalonDetailId
        self.gonfalonId = gonfalonId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        decalBackgroundColorId = try container.decodeIfPresent("decalBackgroundColorId")
        decalColorId = try container.decodeIfPresent("decalColorId")
        decalId = try container.decodeIfPresent("decalId")
        gonfalonColorId = try container.decodeIfPresent("gonfalonColorId")
        gonfalonDetailColorId = try container.decodeIfPresent("gonfalonDetailColorId")
        gonfalonDetailId = try container.decodeIfPresent("gonfalonDetailId")
        gonfalonId = try container.decodeIfPresent("gonfalonId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(decalBackgroundColorId, forKey: "decalBackgroundColorId")
        try container.encodeIfPresent(decalColorId, forKey: "decalColorId")
        try container.encodeIfPresent(decalId, forKey: "decalId")
        try container.encodeIfPresent(gonfalonColorId, forKey: "gonfalonColorId")
        try container.encodeIfPresent(gonfalonDetailColorId, forKey: "gonfalonDetailColorId")
        try container.encodeIfPresent(gonfalonDetailId, forKey: "gonfalonDetailId")
        try container.encodeIfPresent(gonfalonId, forKey: "gonfalonId")
    }

    public static func == (lhs: GroupsV2ClanBanner, rhs: GroupsV2ClanBanner) -> Bool {
        guard lhs.decalBackgroundColorId == rhs.decalBackgroundColorId else { return false }
        guard lhs.decalColorId == rhs.decalColorId else { return false }
        guard lhs.decalId == rhs.decalId else { return false }
        guard lhs.gonfalonColorId == rhs.gonfalonColorId else { return false }
        guard lhs.gonfalonDetailColorId == rhs.gonfalonDetailColorId else { return false }
        guard lhs.gonfalonDetailId == rhs.gonfalonDetailId else { return false }
        guard lhs.gonfalonId == rhs.gonfalonId else { return false }
        return true
    }
}
