//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct CommonModelsCoreSettingsConfiguration: APIModel {

    public var clanBannerDecalColors: [CommonModelsCoreSetting]?

    public var clanBannerDecals: [CommonModelsCoreSetting]?

    public var clanBannerGonfalonColors: [CommonModelsCoreSetting]?

    public var clanBannerGonfalonDetailColors: [CommonModelsCoreSetting]?

    public var clanBannerGonfalonDetails: [CommonModelsCoreSetting]?

    public var clanBannerGonfalons: [CommonModelsCoreSetting]?

    public var clanBannerStandards: [CommonModelsCoreSetting]?

    public var destiny2CoreSettings: CommonModelsDestiny2CoreSettings?

    public var destinyMembershipTypes: [CommonModelsCoreSetting]?

    public var emailSettings: UserEmailSettings?

    public var environment: String?

    public var forumCategories: [CommonModelsCoreSetting]?

    public var groupAvatars: [CommonModelsCoreSetting]?

    public var ignoreReasons: [CommonModelsCoreSetting]?

    public var recruitmentActivities: [CommonModelsCoreSetting]?

    public var recruitmentMiscTags: [CommonModelsCoreSetting]?

    public var recruitmentPlatformTags: [CommonModelsCoreSetting]?

    public var systemContentLocales: [CommonModelsCoreSetting]?

    public var systems: [String: CommonModelsCoreSystem]?

    public var userContentLocales: [CommonModelsCoreSetting]?

    public init(clanBannerDecalColors: [CommonModelsCoreSetting]? = nil, clanBannerDecals: [CommonModelsCoreSetting]? = nil, clanBannerGonfalonColors: [CommonModelsCoreSetting]? = nil, clanBannerGonfalonDetailColors: [CommonModelsCoreSetting]? = nil, clanBannerGonfalonDetails: [CommonModelsCoreSetting]? = nil, clanBannerGonfalons: [CommonModelsCoreSetting]? = nil, clanBannerStandards: [CommonModelsCoreSetting]? = nil, destiny2CoreSettings: CommonModelsDestiny2CoreSettings? = nil, destinyMembershipTypes: [CommonModelsCoreSetting]? = nil, emailSettings: UserEmailSettings? = nil, environment: String? = nil, forumCategories: [CommonModelsCoreSetting]? = nil, groupAvatars: [CommonModelsCoreSetting]? = nil, ignoreReasons: [CommonModelsCoreSetting]? = nil, recruitmentActivities: [CommonModelsCoreSetting]? = nil, recruitmentMiscTags: [CommonModelsCoreSetting]? = nil, recruitmentPlatformTags: [CommonModelsCoreSetting]? = nil, systemContentLocales: [CommonModelsCoreSetting]? = nil, systems: [String: CommonModelsCoreSystem]? = nil, userContentLocales: [CommonModelsCoreSetting]? = nil) {
        self.clanBannerDecalColors = clanBannerDecalColors
        self.clanBannerDecals = clanBannerDecals
        self.clanBannerGonfalonColors = clanBannerGonfalonColors
        self.clanBannerGonfalonDetailColors = clanBannerGonfalonDetailColors
        self.clanBannerGonfalonDetails = clanBannerGonfalonDetails
        self.clanBannerGonfalons = clanBannerGonfalons
        self.clanBannerStandards = clanBannerStandards
        self.destiny2CoreSettings = destiny2CoreSettings
        self.destinyMembershipTypes = destinyMembershipTypes
        self.emailSettings = emailSettings
        self.environment = environment
        self.forumCategories = forumCategories
        self.groupAvatars = groupAvatars
        self.ignoreReasons = ignoreReasons
        self.recruitmentActivities = recruitmentActivities
        self.recruitmentMiscTags = recruitmentMiscTags
        self.recruitmentPlatformTags = recruitmentPlatformTags
        self.systemContentLocales = systemContentLocales
        self.systems = systems
        self.userContentLocales = userContentLocales
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        clanBannerDecalColors = try container.decodeArrayIfPresent("clanBannerDecalColors")
        clanBannerDecals = try container.decodeArrayIfPresent("clanBannerDecals")
        clanBannerGonfalonColors = try container.decodeArrayIfPresent("clanBannerGonfalonColors")
        clanBannerGonfalonDetailColors = try container.decodeArrayIfPresent("clanBannerGonfalonDetailColors")
        clanBannerGonfalonDetails = try container.decodeArrayIfPresent("clanBannerGonfalonDetails")
        clanBannerGonfalons = try container.decodeArrayIfPresent("clanBannerGonfalons")
        clanBannerStandards = try container.decodeArrayIfPresent("clanBannerStandards")
        destiny2CoreSettings = try container.decodeIfPresent("destiny2CoreSettings")
        destinyMembershipTypes = try container.decodeArrayIfPresent("destinyMembershipTypes")
        emailSettings = try container.decodeIfPresent("emailSettings")
        environment = try container.decodeIfPresent("environment")
        forumCategories = try container.decodeArrayIfPresent("forumCategories")
        groupAvatars = try container.decodeArrayIfPresent("groupAvatars")
        ignoreReasons = try container.decodeArrayIfPresent("ignoreReasons")
        recruitmentActivities = try container.decodeArrayIfPresent("recruitmentActivities")
        recruitmentMiscTags = try container.decodeArrayIfPresent("recruitmentMiscTags")
        recruitmentPlatformTags = try container.decodeArrayIfPresent("recruitmentPlatformTags")
        systemContentLocales = try container.decodeArrayIfPresent("systemContentLocales")
        systems = try container.decodeIfPresent("systems")
        userContentLocales = try container.decodeArrayIfPresent("userContentLocales")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(clanBannerDecalColors, forKey: "clanBannerDecalColors")
        try container.encodeIfPresent(clanBannerDecals, forKey: "clanBannerDecals")
        try container.encodeIfPresent(clanBannerGonfalonColors, forKey: "clanBannerGonfalonColors")
        try container.encodeIfPresent(clanBannerGonfalonDetailColors, forKey: "clanBannerGonfalonDetailColors")
        try container.encodeIfPresent(clanBannerGonfalonDetails, forKey: "clanBannerGonfalonDetails")
        try container.encodeIfPresent(clanBannerGonfalons, forKey: "clanBannerGonfalons")
        try container.encodeIfPresent(clanBannerStandards, forKey: "clanBannerStandards")
        try container.encodeIfPresent(destiny2CoreSettings, forKey: "destiny2CoreSettings")
        try container.encodeIfPresent(destinyMembershipTypes, forKey: "destinyMembershipTypes")
        try container.encodeIfPresent(emailSettings, forKey: "emailSettings")
        try container.encodeIfPresent(environment, forKey: "environment")
        try container.encodeIfPresent(forumCategories, forKey: "forumCategories")
        try container.encodeIfPresent(groupAvatars, forKey: "groupAvatars")
        try container.encodeIfPresent(ignoreReasons, forKey: "ignoreReasons")
        try container.encodeIfPresent(recruitmentActivities, forKey: "recruitmentActivities")
        try container.encodeIfPresent(recruitmentMiscTags, forKey: "recruitmentMiscTags")
        try container.encodeIfPresent(recruitmentPlatformTags, forKey: "recruitmentPlatformTags")
        try container.encodeIfPresent(systemContentLocales, forKey: "systemContentLocales")
        try container.encodeIfPresent(systems, forKey: "systems")
        try container.encodeIfPresent(userContentLocales, forKey: "userContentLocales")
    }

    public static func == (lhs: CommonModelsCoreSettingsConfiguration, rhs: CommonModelsCoreSettingsConfiguration) -> Bool {
        guard lhs.clanBannerDecalColors == rhs.clanBannerDecalColors else { return false }
        guard lhs.clanBannerDecals == rhs.clanBannerDecals else { return false }
        guard lhs.clanBannerGonfalonColors == rhs.clanBannerGonfalonColors else { return false }
        guard lhs.clanBannerGonfalonDetailColors == rhs.clanBannerGonfalonDetailColors else { return false }
        guard lhs.clanBannerGonfalonDetails == rhs.clanBannerGonfalonDetails else { return false }
        guard lhs.clanBannerGonfalons == rhs.clanBannerGonfalons else { return false }
        guard lhs.clanBannerStandards == rhs.clanBannerStandards else { return false }
        guard lhs.destiny2CoreSettings == rhs.destiny2CoreSettings else { return false }
        guard lhs.destinyMembershipTypes == rhs.destinyMembershipTypes else { return false }
        guard lhs.emailSettings == rhs.emailSettings else { return false }
        guard lhs.environment == rhs.environment else { return false }
        guard lhs.forumCategories == rhs.forumCategories else { return false }
        guard lhs.groupAvatars == rhs.groupAvatars else { return false }
        guard lhs.ignoreReasons == rhs.ignoreReasons else { return false }
        guard lhs.recruitmentActivities == rhs.recruitmentActivities else { return false }
        guard lhs.recruitmentMiscTags == rhs.recruitmentMiscTags else { return false }
        guard lhs.recruitmentPlatformTags == rhs.recruitmentPlatformTags else { return false }
        guard lhs.systemContentLocales == rhs.systemContentLocales else { return false }
        guard lhs.systems == rhs.systems else { return false }
        guard lhs.userContentLocales == rhs.userContentLocales else { return false }
        return true
    }
}
