//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Guided Game information for this activity. */
public struct DestinyDefinitionsDestinyActivityGuidedBlockDefinition: APIModel {

    /** If -1, the guided group cannot be disbanded. Otherwise, take the total # of players in the activity and subtract this number: that is the total # of votes needed for the guided group to disband. */
    public var guidedDisbandCount: Int?

    /** The maximum amount of people that can be in the waiting lobby. */
    public var guidedMaxLobbySize: Int?

    /** The minimum amount of people that can be in the waiting lobby. */
    public var guidedMinLobbySize: Int?

    public init(guidedDisbandCount: Int? = nil, guidedMaxLobbySize: Int? = nil, guidedMinLobbySize: Int? = nil) {
        self.guidedDisbandCount = guidedDisbandCount
        self.guidedMaxLobbySize = guidedMaxLobbySize
        self.guidedMinLobbySize = guidedMinLobbySize
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        guidedDisbandCount = try container.decodeIfPresent("guidedDisbandCount")
        guidedMaxLobbySize = try container.decodeIfPresent("guidedMaxLobbySize")
        guidedMinLobbySize = try container.decodeIfPresent("guidedMinLobbySize")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(guidedDisbandCount, forKey: "guidedDisbandCount")
        try container.encodeIfPresent(guidedMaxLobbySize, forKey: "guidedMaxLobbySize")
        try container.encodeIfPresent(guidedMinLobbySize, forKey: "guidedMinLobbySize")
    }

    public static func == (lhs: DestinyDefinitionsDestinyActivityGuidedBlockDefinition, rhs: DestinyDefinitionsDestinyActivityGuidedBlockDefinition) -> Bool {
        guard lhs.guidedDisbandCount == rhs.guidedDisbandCount else { return false }
        guard lhs.guidedMaxLobbySize == rhs.guidedMaxLobbySize else { return false }
        guard lhs.guidedMinLobbySize == rhs.guidedMinLobbySize else { return false }
        return true
    }
}
