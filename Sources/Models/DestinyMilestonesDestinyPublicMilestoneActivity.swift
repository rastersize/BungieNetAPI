//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** A milestone may have one or more conceptual Activities associated with it, and each of those conceptual activities could have a variety of variants, modes, tiers, what-have-you. Our attempts to determine what qualifies as a conceptual activity are, unfortunately, janky. So if you see missing modes or modes that don't seem appropriate to you, let us know and I'll buy you a beer if we ever meet up in person. */
public struct DestinyMilestonesDestinyPublicMilestoneActivity: APIModel {

    /** The enumeration equivalent of the most specific Activity Mode under which this activity is played. */
    public enum ActivityModeType: Int, Codable, Equatable, CaseIterable {
        case _0 = 0
        case _2 = 2
        case _3 = 3
        case _4 = 4
        case _5 = 5
        case _6 = 6
        case _7 = 7
        case _9 = 9
        case _10 = 10
        case _11 = 11
        case _12 = 12
        case _13 = 13
        case _15 = 15
        case _16 = 16
        case _17 = 17
        case _18 = 18
        case _19 = 19
        case _20 = 20
        case _21 = 21
        case _22 = 22
        case _24 = 24
        case _25 = 25
        case _26 = 26
        case _27 = 27
        case _28 = 28
        case _29 = 29
        case _30 = 30
        case _31 = 31
        case _32 = 32
        case _37 = 37
        case _38 = 38
        case _39 = 39
        case _40 = 40
        case _41 = 41
        case _42 = 42
        case _43 = 43
        case _44 = 44
        case _45 = 45
        case _46 = 46
        case _47 = 47
        case _48 = 48
        case _49 = 49
        case _50 = 50
        case _51 = 51
        case _52 = 52
        case _53 = 53
        case _54 = 54
        case _55 = 55
        case _56 = 56
        case _57 = 57
        case _58 = 58
        case _59 = 59
        case _60 = 60
        case _61 = 61
        case _62 = 62
        case _63 = 63
        case _64 = 64
        case _65 = 65
        case _66 = 66
        case _67 = 67
        case _68 = 68
        case _69 = 69
        case _70 = 70
        case _71 = 71
        case _72 = 72
        case _73 = 73
        case _74 = 74
        case _75 = 75
        case _76 = 76
        case _77 = 77
        case _78 = 78
        case _79 = 79
        case _80 = 80
        case _81 = 81
    }

    /** The hash identifier of the activity that's been chosen to be considered the canonical "conceptual" activity definition. This may have many variants, defined herein. */
    public var activityHash: Int?

    /** The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it's not clear what mode the PVP map is being played under. If it's a playlist, this will be less specific: but hopefully useful in some way. */
    public var activityModeHash: Int?

    /** The enumeration equivalent of the most specific Activity Mode under which this activity is played. */
    public var activityModeType: ActivityModeType?

    /** The activity may have 0-to-many modifiers: if it does, this will contain the hashes to the DestinyActivityModifierDefinition that defines the modifier being applied. */
    public var modifierHashes: [Int]?

    /** Every relevant variation of this conceptual activity, including the conceptual activity itself, have variants defined here. */
    public var variants: [DestinyMilestonesDestinyPublicMilestoneActivityVariant]?

    public init(activityHash: Int? = nil, activityModeHash: Int? = nil, activityModeType: ActivityModeType? = nil, modifierHashes: [Int]? = nil, variants: [DestinyMilestonesDestinyPublicMilestoneActivityVariant]? = nil) {
        self.activityHash = activityHash
        self.activityModeHash = activityModeHash
        self.activityModeType = activityModeType
        self.modifierHashes = modifierHashes
        self.variants = variants
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        activityHash = try container.decodeIfPresent("activityHash")
        activityModeHash = try container.decodeIfPresent("activityModeHash")
        activityModeType = try container.decodeIfPresent("activityModeType")
        modifierHashes = try container.decodeArrayIfPresent("modifierHashes")
        variants = try container.decodeArrayIfPresent("variants")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(activityHash, forKey: "activityHash")
        try container.encodeIfPresent(activityModeHash, forKey: "activityModeHash")
        try container.encodeIfPresent(activityModeType, forKey: "activityModeType")
        try container.encodeIfPresent(modifierHashes, forKey: "modifierHashes")
        try container.encodeIfPresent(variants, forKey: "variants")
    }

    public static func == (lhs: DestinyMilestonesDestinyPublicMilestoneActivity, rhs: DestinyMilestonesDestinyPublicMilestoneActivity) -> Bool {
        guard lhs.activityHash == rhs.activityHash else { return false }
        guard lhs.activityModeHash == rhs.activityModeHash else { return false }
        guard lhs.activityModeType == rhs.activityModeType else { return false }
        guard lhs.modifierHashes == rhs.modifierHashes else { return false }
        guard lhs.variants == rhs.variants else { return false }
        return true
    }
}
