//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct CommonModelsDestiny2CoreSettings: APIModel {

    public var ammoTypeHeavyIcon: String?

    public var ammoTypePrimaryIcon: String?

    public var ammoTypeSpecialIcon: String?

    public var badgesRootNode: Int?

    public var collectionRootNode: Int?

    public var currentRankProgressionHashes: [Int]?

    public var currentSeasonHash: Int?

    public var currentSeasonalArtifactHash: Int?

    public var futureSeasonHashes: [Int]?

    public var medalsRootNode: Int?

    public var recordsRootNode: Int?

    public var undiscoveredCollectibleImage: String?

    public init(ammoTypeHeavyIcon: String? = nil, ammoTypePrimaryIcon: String? = nil, ammoTypeSpecialIcon: String? = nil, badgesRootNode: Int? = nil, collectionRootNode: Int? = nil, currentRankProgressionHashes: [Int]? = nil, currentSeasonHash: Int? = nil, currentSeasonalArtifactHash: Int? = nil, futureSeasonHashes: [Int]? = nil, medalsRootNode: Int? = nil, recordsRootNode: Int? = nil, undiscoveredCollectibleImage: String? = nil) {
        self.ammoTypeHeavyIcon = ammoTypeHeavyIcon
        self.ammoTypePrimaryIcon = ammoTypePrimaryIcon
        self.ammoTypeSpecialIcon = ammoTypeSpecialIcon
        self.badgesRootNode = badgesRootNode
        self.collectionRootNode = collectionRootNode
        self.currentRankProgressionHashes = currentRankProgressionHashes
        self.currentSeasonHash = currentSeasonHash
        self.currentSeasonalArtifactHash = currentSeasonalArtifactHash
        self.futureSeasonHashes = futureSeasonHashes
        self.medalsRootNode = medalsRootNode
        self.recordsRootNode = recordsRootNode
        self.undiscoveredCollectibleImage = undiscoveredCollectibleImage
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        ammoTypeHeavyIcon = try container.decodeIfPresent("ammoTypeHeavyIcon")
        ammoTypePrimaryIcon = try container.decodeIfPresent("ammoTypePrimaryIcon")
        ammoTypeSpecialIcon = try container.decodeIfPresent("ammoTypeSpecialIcon")
        badgesRootNode = try container.decodeIfPresent("badgesRootNode")
        collectionRootNode = try container.decodeIfPresent("collectionRootNode")
        currentRankProgressionHashes = try container.decodeArrayIfPresent("currentRankProgressionHashes")
        currentSeasonHash = try container.decodeIfPresent("currentSeasonHash")
        currentSeasonalArtifactHash = try container.decodeIfPresent("currentSeasonalArtifactHash")
        futureSeasonHashes = try container.decodeArrayIfPresent("futureSeasonHashes")
        medalsRootNode = try container.decodeIfPresent("medalsRootNode")
        recordsRootNode = try container.decodeIfPresent("recordsRootNode")
        undiscoveredCollectibleImage = try container.decodeIfPresent("undiscoveredCollectibleImage")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(ammoTypeHeavyIcon, forKey: "ammoTypeHeavyIcon")
        try container.encodeIfPresent(ammoTypePrimaryIcon, forKey: "ammoTypePrimaryIcon")
        try container.encodeIfPresent(ammoTypeSpecialIcon, forKey: "ammoTypeSpecialIcon")
        try container.encodeIfPresent(badgesRootNode, forKey: "badgesRootNode")
        try container.encodeIfPresent(collectionRootNode, forKey: "collectionRootNode")
        try container.encodeIfPresent(currentRankProgressionHashes, forKey: "currentRankProgressionHashes")
        try container.encodeIfPresent(currentSeasonHash, forKey: "currentSeasonHash")
        try container.encodeIfPresent(currentSeasonalArtifactHash, forKey: "currentSeasonalArtifactHash")
        try container.encodeIfPresent(futureSeasonHashes, forKey: "futureSeasonHashes")
        try container.encodeIfPresent(medalsRootNode, forKey: "medalsRootNode")
        try container.encodeIfPresent(recordsRootNode, forKey: "recordsRootNode")
        try container.encodeIfPresent(undiscoveredCollectibleImage, forKey: "undiscoveredCollectibleImage")
    }

    public static func == (lhs: CommonModelsDestiny2CoreSettings, rhs: CommonModelsDestiny2CoreSettings) -> Bool {
        guard lhs.ammoTypeHeavyIcon == rhs.ammoTypeHeavyIcon else { return false }
        guard lhs.ammoTypePrimaryIcon == rhs.ammoTypePrimaryIcon else { return false }
        guard lhs.ammoTypeSpecialIcon == rhs.ammoTypeSpecialIcon else { return false }
        guard lhs.badgesRootNode == rhs.badgesRootNode else { return false }
        guard lhs.collectionRootNode == rhs.collectionRootNode else { return false }
        guard lhs.currentRankProgressionHashes == rhs.currentRankProgressionHashes else { return false }
        guard lhs.currentSeasonHash == rhs.currentSeasonHash else { return false }
        guard lhs.currentSeasonalArtifactHash == rhs.currentSeasonalArtifactHash else { return false }
        guard lhs.futureSeasonHashes == rhs.futureSeasonHashes else { return false }
        guard lhs.medalsRootNode == rhs.medalsRootNode else { return false }
        guard lhs.recordsRootNode == rhs.recordsRootNode else { return false }
        guard lhs.undiscoveredCollectibleImage == rhs.undiscoveredCollectibleImage else { return false }
        return true
    }
}
