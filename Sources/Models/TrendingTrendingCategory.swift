//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct TrendingTrendingCategory: APIModel {

    public var categoryId: String?

    public var categoryName: String?

    public var entries: SearchResultOfTrendingEntry?

    public init(categoryId: String? = nil, categoryName: String? = nil, entries: SearchResultOfTrendingEntry? = nil) {
        self.categoryId = categoryId
        self.categoryName = categoryName
        self.entries = entries
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        categoryId = try container.decodeIfPresent("categoryId")
        categoryName = try container.decodeIfPresent("categoryName")
        entries = try container.decodeIfPresent("entries")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(categoryId, forKey: "categoryId")
        try container.encodeIfPresent(categoryName, forKey: "categoryName")
        try container.encodeIfPresent(entries, forKey: "entries")
    }

    public static func == (lhs: TrendingTrendingCategory, rhs: TrendingTrendingCategory) -> Bool {
        guard lhs.categoryId == rhs.categoryId else { return false }
        guard lhs.categoryName == rhs.categoryName else { return false }
        guard lhs.entries == rhs.entries else { return false }
        return true
    }
}
