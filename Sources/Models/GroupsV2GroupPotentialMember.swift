//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct GroupsV2GroupPotentialMember: APIModel {

    public var bungieNetUserInfo: UserUserInfoCard?

    public var destinyUserInfo: GroupsV2GroupUserInfoCard?

    public var groupId: Int?

    public var joinDate: DateTime?

    public var potentialStatus: Int?

    public init(bungieNetUserInfo: UserUserInfoCard? = nil, destinyUserInfo: GroupsV2GroupUserInfoCard? = nil, groupId: Int? = nil, joinDate: DateTime? = nil, potentialStatus: Int? = nil) {
        self.bungieNetUserInfo = bungieNetUserInfo
        self.destinyUserInfo = destinyUserInfo
        self.groupId = groupId
        self.joinDate = joinDate
        self.potentialStatus = potentialStatus
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        bungieNetUserInfo = try container.decodeIfPresent("bungieNetUserInfo")
        destinyUserInfo = try container.decodeIfPresent("destinyUserInfo")
        groupId = try container.decodeIfPresent("groupId")
        joinDate = try container.decodeIfPresent("joinDate")
        potentialStatus = try container.decodeIfPresent("potentialStatus")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(bungieNetUserInfo, forKey: "bungieNetUserInfo")
        try container.encodeIfPresent(destinyUserInfo, forKey: "destinyUserInfo")
        try container.encodeIfPresent(groupId, forKey: "groupId")
        try container.encodeIfPresent(joinDate, forKey: "joinDate")
        try container.encodeIfPresent(potentialStatus, forKey: "potentialStatus")
    }

    public static func == (lhs: GroupsV2GroupPotentialMember, rhs: GroupsV2GroupPotentialMember) -> Bool {
        guard lhs.bungieNetUserInfo == rhs.bungieNetUserInfo else { return false }
        guard lhs.destinyUserInfo == rhs.destinyUserInfo else { return false }
        guard lhs.groupId == rhs.groupId else { return false }
        guard lhs.joinDate == rhs.joinDate else { return false }
        guard lhs.potentialStatus == rhs.potentialStatus else { return false }
        return true
    }
}
