//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** If an item has a related gearset, this is the list of items in that set, and an unlock expression that evaluates to a number representing the progress toward gearset completion (a very rare use for unlock expressions!) */
public struct DestinyDefinitionsDestinyItemGearsetBlockDefinition: APIModel {

    /** The list of hashes for items in the gearset. Use them to look up DestinyInventoryItemDefinition entries for the items in the set. */
    public var itemList: [Int]?

    /** The maximum possible number of items that can be collected. */
    public var trackingValueMax: Int?

    public init(itemList: [Int]? = nil, trackingValueMax: Int? = nil) {
        self.itemList = itemList
        self.trackingValueMax = trackingValueMax
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        itemList = try container.decodeArrayIfPresent("itemList")
        trackingValueMax = try container.decodeIfPresent("trackingValueMax")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(itemList, forKey: "itemList")
        try container.encodeIfPresent(trackingValueMax, forKey: "trackingValueMax")
    }

    public static func == (lhs: DestinyDefinitionsDestinyItemGearsetBlockDefinition, rhs: DestinyDefinitionsDestinyItemGearsetBlockDefinition) -> Bool {
        guard lhs.itemList == rhs.itemList else { return false }
        guard lhs.trackingValueMax == rhs.trackingValueMax else { return false }
        return true
    }
}
