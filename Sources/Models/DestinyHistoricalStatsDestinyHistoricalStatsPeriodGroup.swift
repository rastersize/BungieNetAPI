//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup: APIModel {

    /** If the period group is for a specific activity, this property will be set. */
    public var activityDetails: [String: Any]?

    /** Period for the group. If the stat periodType is day, then this will have a specific day. If the type is monthly, then this value will be the first day of the applicable month. This value is not set when the periodType is 'all time'. */
    public var period: DateTime?

    /** Collection of stats for the period. */
    public var values: [String: DestinyHistoricalStatsDestinyHistoricalStatsValue]?

    public init(activityDetails: [String: Any]? = nil, period: DateTime? = nil, values: [String: DestinyHistoricalStatsDestinyHistoricalStatsValue]? = nil) {
        self.activityDetails = activityDetails
        self.period = period
        self.values = values
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        activityDetails = try container.decodeAnyIfPresent("activityDetails")
        period = try container.decodeIfPresent("period")
        values = try container.decodeIfPresent("values")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeAnyIfPresent(activityDetails, forKey: "activityDetails")
        try container.encodeIfPresent(period, forKey: "period")
        try container.encodeIfPresent(values, forKey: "values")
    }

    public static func == (lhs: DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup, rhs: DestinyHistoricalStatsDestinyHistoricalStatsPeriodGroup) -> Bool {
        guard NSDictionary(dictionary: lhs.activityDetails ?? [:]).isEqual(to: rhs.activityDetails ?? [:]) else { return false }
        guard lhs.period == rhs.period else { return false }
        guard lhs.values == rhs.values else { return false }
        return true
    }
}
