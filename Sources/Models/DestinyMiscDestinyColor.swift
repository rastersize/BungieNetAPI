//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Represents a color whose RGBA values are all represented as values between 0 and 255. */
public struct DestinyMiscDestinyColor: APIModel {

    public var alpha: File?

    public var blue: File?

    public var green: File?

    public var red: File?

    public init(alpha: File? = nil, blue: File? = nil, green: File? = nil, red: File? = nil) {
        self.alpha = alpha
        self.blue = blue
        self.green = green
        self.red = red
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        alpha = try container.decodeIfPresent("alpha")
        blue = try container.decodeIfPresent("blue")
        green = try container.decodeIfPresent("green")
        red = try container.decodeIfPresent("red")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(alpha, forKey: "alpha")
        try container.encodeIfPresent(blue, forKey: "blue")
        try container.encodeIfPresent(green, forKey: "green")
        try container.encodeIfPresent(red, forKey: "red")
    }

    public static func == (lhs: DestinyMiscDestinyColor, rhs: DestinyMiscDestinyColor) -> Bool {
        guard lhs.alpha == rhs.alpha else { return false }
        guard lhs.blue == rhs.blue else { return false }
        guard lhs.green == rhs.green else { return false }
        guard lhs.red == rhs.red else { return false }
        return true
    }
}
