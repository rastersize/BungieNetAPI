//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter: APIModel {

    public var characterId: Int?

    public var deleted: Bool?

    public var merged: DestinyHistoricalStatsDestinyHistoricalStatsByPeriod?

    public var results: [String: DestinyHistoricalStatsDestinyHistoricalStatsByPeriod]?

    public init(characterId: Int? = nil, deleted: Bool? = nil, merged: DestinyHistoricalStatsDestinyHistoricalStatsByPeriod? = nil, results: [String: DestinyHistoricalStatsDestinyHistoricalStatsByPeriod]? = nil) {
        self.characterId = characterId
        self.deleted = deleted
        self.merged = merged
        self.results = results
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        characterId = try container.decodeIfPresent("characterId")
        deleted = try container.decodeIfPresent("deleted")
        merged = try container.decodeIfPresent("merged")
        results = try container.decodeIfPresent("results")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(characterId, forKey: "characterId")
        try container.encodeIfPresent(deleted, forKey: "deleted")
        try container.encodeIfPresent(merged, forKey: "merged")
        try container.encodeIfPresent(results, forKey: "results")
    }

    public static func == (lhs: DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter, rhs: DestinyHistoricalStatsDestinyHistoricalStatsPerCharacter) -> Bool {
        guard lhs.characterId == rhs.characterId else { return false }
        guard lhs.deleted == rhs.deleted else { return false }
        guard lhs.merged == rhs.merged else { return false }
        guard lhs.results == rhs.results else { return false }
        return true
    }
}
