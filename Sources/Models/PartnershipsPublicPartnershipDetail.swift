//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** All the partnership info that's fit to expose externally, if we care to do so. */
public struct PartnershipsPublicPartnershipDetail: APIModel {

    public var icon: String?

    public var identifier: String?

    public var name: String?

    public var partnerType: Int?

    public init(icon: String? = nil, identifier: String? = nil, name: String? = nil, partnerType: Int? = nil) {
        self.icon = icon
        self.identifier = identifier
        self.name = name
        self.partnerType = partnerType
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        icon = try container.decodeIfPresent("icon")
        identifier = try container.decodeIfPresent("identifier")
        name = try container.decodeIfPresent("name")
        partnerType = try container.decodeIfPresent("partnerType")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(icon, forKey: "icon")
        try container.encodeIfPresent(identifier, forKey: "identifier")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(partnerType, forKey: "partnerType")
    }

    public static func == (lhs: PartnershipsPublicPartnershipDetail, rhs: PartnershipsPublicPartnershipDetail) -> Bool {
        guard lhs.icon == rhs.icon else { return false }
        guard lhs.identifier == rhs.identifier else { return false }
        guard lhs.name == rhs.name else { return false }
        guard lhs.partnerType == rhs.partnerType else { return false }
        return true
    }
}
