//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct DestinyAdvancedAwaPermissionRequested: APIModel {

    /** Item instance ID the action shall be applied to. This is optional for all but a new AwaType values. Rule of thumb is to provide the item instance ID if one is available. */
    public var affectedItemId: Int?

    /** Destiny character ID, if applicable, that will be affected by the action. */
    public var characterId: Int?

    /** Destiny membership type of the account to modify. */
    public var membershipType: Int?

    /** Type of advanced write action. */
    public var type: Int?

    public init(affectedItemId: Int? = nil, characterId: Int? = nil, membershipType: Int? = nil, type: Int? = nil) {
        self.affectedItemId = affectedItemId
        self.characterId = characterId
        self.membershipType = membershipType
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        affectedItemId = try container.decodeIfPresent("affectedItemId")
        characterId = try container.decodeIfPresent("characterId")
        membershipType = try container.decodeIfPresent("membershipType")
        type = try container.decodeIfPresent("type")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(affectedItemId, forKey: "affectedItemId")
        try container.encodeIfPresent(characterId, forKey: "characterId")
        try container.encodeIfPresent(membershipType, forKey: "membershipType")
        try container.encodeIfPresent(type, forKey: "type")
    }

    public static func == (lhs: DestinyAdvancedAwaPermissionRequested, rhs: DestinyAdvancedAwaPermissionRequested) -> Bool {
        guard lhs.affectedItemId == rhs.affectedItemId else { return false }
        guard lhs.characterId == rhs.characterId else { return false }
        guard lhs.membershipType == rhs.membershipType else { return false }
        guard lhs.type == rhs.type else { return false }
        return true
    }
}
