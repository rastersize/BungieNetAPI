//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The results of a search for Destiny content. This will be improved on over time, I've been doing some experimenting to see what might be useful. */
public struct DestinyDefinitionsDestinyEntitySearchResult: APIModel {

    /** The items found that are matches/near matches for the searched-for term, sorted by something vaguely resembling "relevance". Hopefully this will get better in the future. */
    public var results: [String: Any]?

    /** A list of suggested words that might make for better search results, based on the text searched for. */
    public var suggestedWords: [String]?

    public init(results: [String: Any]? = nil, suggestedWords: [String]? = nil) {
        self.results = results
        self.suggestedWords = suggestedWords
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        results = try container.decodeAnyIfPresent("results")
        suggestedWords = try container.decodeArrayIfPresent("suggestedWords")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeAnyIfPresent(results, forKey: "results")
        try container.encodeIfPresent(suggestedWords, forKey: "suggestedWords")
    }

    public static func == (lhs: DestinyDefinitionsDestinyEntitySearchResult, rhs: DestinyDefinitionsDestinyEntitySearchResult) -> Bool {
        guard NSDictionary(dictionary: lhs.results ?? [:]).isEqual(to: rhs.results ?? [:]) else { return false }
        guard lhs.suggestedWords == rhs.suggestedWords else { return false }
        return true
    }
}
