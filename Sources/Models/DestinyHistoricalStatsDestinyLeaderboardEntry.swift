//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct DestinyHistoricalStatsDestinyLeaderboardEntry: APIModel {

    /** ID of the player's best character for the reported stat. */
    public var characterId: Int?

    /** Identity details of the player */
    public var player: [String: Any]?

    /** Where this player ranks on the leaderboard. A value of 1 is the top rank. */
    public var rank: Int?

    /** Value of the stat for this player */
    public var value: [String: Any]?

    public init(characterId: Int? = nil, player: [String: Any]? = nil, rank: Int? = nil, value: [String: Any]? = nil) {
        self.characterId = characterId
        self.player = player
        self.rank = rank
        self.value = value
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        characterId = try container.decodeIfPresent("characterId")
        player = try container.decodeAnyIfPresent("player")
        rank = try container.decodeIfPresent("rank")
        value = try container.decodeAnyIfPresent("value")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(characterId, forKey: "characterId")
        try container.encodeAnyIfPresent(player, forKey: "player")
        try container.encodeIfPresent(rank, forKey: "rank")
        try container.encodeAnyIfPresent(value, forKey: "value")
    }

    public static func == (lhs: DestinyHistoricalStatsDestinyLeaderboardEntry, rhs: DestinyHistoricalStatsDestinyLeaderboardEntry) -> Bool {
        guard lhs.characterId == rhs.characterId else { return false }
        guard NSDictionary(dictionary: lhs.player ?? [:]).isEqual(to: rhs.player ?? [:]) else { return false }
        guard lhs.rank == rhs.rank else { return false }
        guard NSDictionary(dictionary: lhs.value ?? [:]).isEqual(to: rhs.value ?? [:]) else { return false }
        return true
    }
}
