//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct TrendingTrendingEntryDestinyRitual: APIModel {

    public var dateEnd: DateTime?

    public var dateStart: DateTime?

    /** A destiny event will not necessarily have milestone "custom content", but if it does the details will be here. */
    public var eventContent: [String: Any]?

    public var icon: String?

    public var image: String?

    /** A destiny event does not necessarily have a related Milestone, but if it does the details will be returned here. */
    public var milestoneDetails: [String: Any]?

    public var subtitle: String?

    public var title: String?

    public init(dateEnd: DateTime? = nil, dateStart: DateTime? = nil, eventContent: [String: Any]? = nil, icon: String? = nil, image: String? = nil, milestoneDetails: [String: Any]? = nil, subtitle: String? = nil, title: String? = nil) {
        self.dateEnd = dateEnd
        self.dateStart = dateStart
        self.eventContent = eventContent
        self.icon = icon
        self.image = image
        self.milestoneDetails = milestoneDetails
        self.subtitle = subtitle
        self.title = title
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        dateEnd = try container.decodeIfPresent("dateEnd")
        dateStart = try container.decodeIfPresent("dateStart")
        eventContent = try container.decodeAnyIfPresent("eventContent")
        icon = try container.decodeIfPresent("icon")
        image = try container.decodeIfPresent("image")
        milestoneDetails = try container.decodeAnyIfPresent("milestoneDetails")
        subtitle = try container.decodeIfPresent("subtitle")
        title = try container.decodeIfPresent("title")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(dateEnd, forKey: "dateEnd")
        try container.encodeIfPresent(dateStart, forKey: "dateStart")
        try container.encodeAnyIfPresent(eventContent, forKey: "eventContent")
        try container.encodeIfPresent(icon, forKey: "icon")
        try container.encodeIfPresent(image, forKey: "image")
        try container.encodeAnyIfPresent(milestoneDetails, forKey: "milestoneDetails")
        try container.encodeIfPresent(subtitle, forKey: "subtitle")
        try container.encodeIfPresent(title, forKey: "title")
    }

    public static func == (lhs: TrendingTrendingEntryDestinyRitual, rhs: TrendingTrendingEntryDestinyRitual) -> Bool {
        guard lhs.dateEnd == rhs.dateEnd else { return false }
        guard lhs.dateStart == rhs.dateStart else { return false }
        guard NSDictionary(dictionary: lhs.eventContent ?? [:]).isEqual(to: rhs.eventContent ?? [:]) else { return false }
        guard lhs.icon == rhs.icon else { return false }
        guard lhs.image == rhs.image else { return false }
        guard NSDictionary(dictionary: lhs.milestoneDetails ?? [:]).isEqual(to: rhs.milestoneDetails ?? [:]) else { return false }
        guard lhs.subtitle == rhs.subtitle else { return false }
        guard lhs.title == rhs.title else { return false }
        return true
    }
}
