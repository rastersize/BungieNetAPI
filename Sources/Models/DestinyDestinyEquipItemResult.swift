//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** The results of an Equipping operation performed through the Destiny API. */
public struct DestinyDestinyEquipItemResult: APIModel {

    /** A PlatformErrorCodes enum indicating whether it succeeded, and if it failed why. */
    public var equipStatus: Int?

    /** The instance ID of the item in question (all items that can be equipped must, but definition, be Instanced and thus have an Instance ID that you can use to refer to them) */
    public var itemInstanceId: Int?

    public init(equipStatus: Int? = nil, itemInstanceId: Int? = nil) {
        self.equipStatus = equipStatus
        self.itemInstanceId = itemInstanceId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        equipStatus = try container.decodeIfPresent("equipStatus")
        itemInstanceId = try container.decodeIfPresent("itemInstanceId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(equipStatus, forKey: "equipStatus")
        try container.encodeIfPresent(itemInstanceId, forKey: "itemInstanceId")
    }

    public static func == (lhs: DestinyDestinyEquipItemResult, rhs: DestinyDestinyEquipItemResult) -> Bool {
        guard lhs.equipStatus == rhs.equipStatus else { return false }
        guard lhs.itemInstanceId == rhs.itemInstanceId else { return false }
        return true
    }
}
