//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

/** Sockets are grouped into categories in the UI. These define which category and which sockets are under that category. */
public struct DestinyDefinitionsDestinyItemSocketCategoryDefinition: APIModel {

    /** The hash for the Socket Category: a quick way to go get the header display information for the category. Use it to look up DestinySocketCategoryDefinition info. */
    public var socketCategoryHash: Int?

    /** Use these indexes to look up the sockets in the "sockets.socketEntries" property on the item definition. These are the indexes under the category, in game-rendered order. */
    public var socketIndexes: [Int]?

    public init(socketCategoryHash: Int? = nil, socketIndexes: [Int]? = nil) {
        self.socketCategoryHash = socketCategoryHash
        self.socketIndexes = socketIndexes
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        socketCategoryHash = try container.decodeIfPresent("socketCategoryHash")
        socketIndexes = try container.decodeArrayIfPresent("socketIndexes")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(socketCategoryHash, forKey: "socketCategoryHash")
        try container.encodeIfPresent(socketIndexes, forKey: "socketIndexes")
    }

    public static func == (lhs: DestinyDefinitionsDestinyItemSocketCategoryDefinition, rhs: DestinyDefinitionsDestinyItemSocketCategoryDefinition) -> Bool {
        guard lhs.socketCategoryHash == rhs.socketCategoryHash else { return false }
        guard lhs.socketIndexes == rhs.socketIndexes else { return false }
        return true
    }
}
