//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct DestinyDefinitionsArtifactsDestinyArtifactTierDefinition: APIModel {

    /** The human readable title of this tier, if any. */
    public var displayTitle: String?

    /** The items that can be earned within this tier. */
    public var items: [DestinyDefinitionsArtifactsDestinyArtifactTierItemDefinition]?

    /** The minimum number of "unlock points" that you must have used before you can unlock items from this tier. */
    public var minimumUnlockPointsUsedRequirement: Int?

    /** A string representing the localized minimum requirement text for this Tier, if any. */
    public var progressRequirementMessage: String?

    /** An identifier, unique within the Artifact, for this specific tier. */
    public var tierHash: Int?

    public init(displayTitle: String? = nil, items: [DestinyDefinitionsArtifactsDestinyArtifactTierItemDefinition]? = nil, minimumUnlockPointsUsedRequirement: Int? = nil, progressRequirementMessage: String? = nil, tierHash: Int? = nil) {
        self.displayTitle = displayTitle
        self.items = items
        self.minimumUnlockPointsUsedRequirement = minimumUnlockPointsUsedRequirement
        self.progressRequirementMessage = progressRequirementMessage
        self.tierHash = tierHash
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        displayTitle = try container.decodeIfPresent("displayTitle")
        items = try container.decodeArrayIfPresent("items")
        minimumUnlockPointsUsedRequirement = try container.decodeIfPresent("minimumUnlockPointsUsedRequirement")
        progressRequirementMessage = try container.decodeIfPresent("progressRequirementMessage")
        tierHash = try container.decodeIfPresent("tierHash")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(displayTitle, forKey: "displayTitle")
        try container.encodeIfPresent(items, forKey: "items")
        try container.encodeIfPresent(minimumUnlockPointsUsedRequirement, forKey: "minimumUnlockPointsUsedRequirement")
        try container.encodeIfPresent(progressRequirementMessage, forKey: "progressRequirementMessage")
        try container.encodeIfPresent(tierHash, forKey: "tierHash")
    }

    public static func == (lhs: DestinyDefinitionsArtifactsDestinyArtifactTierDefinition, rhs: DestinyDefinitionsArtifactsDestinyArtifactTierDefinition) -> Bool {
        guard lhs.displayTitle == rhs.displayTitle else { return false }
        guard lhs.items == rhs.items else { return false }
        guard lhs.minimumUnlockPointsUsedRequirement == rhs.minimumUnlockPointsUsedRequirement else { return false }
        guard lhs.progressRequirementMessage == rhs.progressRequirementMessage else { return false }
        guard lhs.tierHash == rhs.tierHash else { return false }
        return true
    }
}
