//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct UserHardLinkedUserMembership: APIModel {

    public var crossSaveOverriddenMembershipId: Int?

    public var crossSaveOverriddenType: Int?

    public var membershipId: Int?

    public var membershipType: Int?

    public init(crossSaveOverriddenMembershipId: Int? = nil, crossSaveOverriddenType: Int? = nil, membershipId: Int? = nil, membershipType: Int? = nil) {
        self.crossSaveOverriddenMembershipId = crossSaveOverriddenMembershipId
        self.crossSaveOverriddenType = crossSaveOverriddenType
        self.membershipId = membershipId
        self.membershipType = membershipType
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        crossSaveOverriddenMembershipId = try container.decodeIfPresent("CrossSaveOverriddenMembershipId")
        crossSaveOverriddenType = try container.decodeIfPresent("CrossSaveOverriddenType")
        membershipId = try container.decodeIfPresent("membershipId")
        membershipType = try container.decodeIfPresent("membershipType")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(crossSaveOverriddenMembershipId, forKey: "CrossSaveOverriddenMembershipId")
        try container.encodeIfPresent(crossSaveOverriddenType, forKey: "CrossSaveOverriddenType")
        try container.encodeIfPresent(membershipId, forKey: "membershipId")
        try container.encodeIfPresent(membershipType, forKey: "membershipType")
    }

    public static func == (lhs: UserHardLinkedUserMembership, rhs: UserHardLinkedUserMembership) -> Bool {
        guard lhs.crossSaveOverriddenMembershipId == rhs.crossSaveOverriddenMembershipId else { return false }
        guard lhs.crossSaveOverriddenType == rhs.crossSaveOverriddenType else { return false }
        guard lhs.membershipId == rhs.membershipId else { return false }
        guard lhs.membershipType == rhs.membershipType else { return false }
        return true
    }
}
